const messageQueue = [
    `Ch√∫c c√°c b·∫°n n·ªØ ng√†y 8/3 lu√¥n xinh ƒë·∫πp nh∆∞ hoa, r·∫°ng r·ª° nh∆∞ n·∫Øng v√† ng·ªçt ng√†o nh∆∞ m·∫≠t. Happy Women's Day!!!!`,
    `Ch√∫c t·∫•t c·∫£ ch·ªã em ZaloPay kh√¥ng ch·ªâ c√≥ 1 ng√†y 8/3 m√† m·ªói ng√†y ƒë·ªÅu vui v·∫ª, tr·∫ª trung, xinh ƒë·∫πp nh√©!`,
    `Ch√∫c c√°c ch·ªã/em c√≥ m·ªôt ng√†y 8/3 th·∫≠t √Ω nghƒ©a, ƒë∆∞·ª£c m·ªçi ng∆∞·ªùi y√™u th∆∞∆°ng, ti·ªÅn ƒë·∫ßy t√∫i, t√¨nh ƒë·∫ßy tim.
    Happy Women's Day`,
    `VƒÉn th√¨ em ch·∫≥ng c√≥ ƒë√¢u
    Th∆° th√¨... m·ªôt ch√∫t ƒë√¥i c√¢u g·ªçi l√†
    
    "H√¥m nay m√πng t√°m th√°ng ba
    L√† ng√†y g·ª≠i nh·ªØng l·ªùi ca ƒë·∫øn ng∆∞·ªùi
    G·ª≠i n·ª≠a th·∫ø gi·ªõi xinh t∆∞∆°i
    Lu√¥n lu√¥n vui v·∫ª r·∫°ng ng·ªùi nh∆∞ hoa
    Y√™u ƒë·ªùi h√°t nh·ªØng kh√∫c ca
    N·ª≠a kia th·∫ø gi·ªõi nghe l√† m√™ say
    Gi·∫•c m∆° th√¨ h√£y c·ª© bay
    Bay cao cao v√∫t ƒë·∫øn ng√†y th√†nh c√¥ng
    Mong v·∫°n ƒëi·ªÅu ∆∞·ªõc ch·ªù mong
    S·∫Ω s·ªõm ch·∫≥ng ph·∫£i ng√≥ng tr√¥ng ƒë·ª£i ch·ªù
    Th√¥i th√¨ c·ª© m·ªông c·ª© m∆°
    (Cho) n·ª≠a kia th·∫ø gi·ªõi ng·∫©n ng∆° ng·∫Øm nh√¨n."
    
    _Ch√∫c M·ª´ng 8/3 c√°c ch·ªã em ZaloPay_
    _From PTO-Platform with Love <3_`,
    `Ch√∫c m·ª´ng ng√†y c·ªßa nh·ªØng ng∆∞·ªùi ph·ª• n·ªØ ƒë√°ng qu√Ω! Mong b·∫°n lu√¥n ƒë∆∞·ª£c tr√†n ƒë·∫ßy ni·ªÅm vui, s·ª©c kh·ªèe v√† th√†nh c√¥ng trong cu·ªôc s·ªëng v√† s·ª± nghi·ªáp.`,
    `Ch√∫c b·∫°n ng√†y Qu·ªëc t·∫ø Ph·ª• n·ªØ th·∫≠t vui v·∫ª v√† ƒë·∫ßy √Ω nghƒ©a! H√£y ti·∫øp t·ª•c truy·ªÅn c·∫£m h·ª©ng v√† l√† ngu·ªìn ƒë·ªông vi√™n cho m·ªçi ng∆∞·ªùi xung quanh nh√©.`,
    `Ch√∫c c√°c ch·ªã em ZaloPay th·∫≠t vui v·∫ª v√† r·∫°ng r·ª° trong ng√†y 8/3
    Ch√∫c ch·ªã em ng√†y c√†ng xinh ƒë·∫πp, c√¥ng vi·ªác thu·∫≠n l·ª£i v√† s·ªõm ƒë·∫°t ƒë∆∞·ª£c ƒëi·ªÅu m√¨nh mu·ªën. 
    V·ªÅ t√¨nh c·∫£m, m√¨nh xin ch√∫c cho ch·ªã em n√†o ƒëang y√™u s·∫Ω ng√†y c√†ng n·ªìng th·∫Øm, ai ƒëang c√≥ crush th√¨ s·ªõm ƒë∆∞·ª£c t·ªè t√¨nh, c√≤n kh√¥ng n·ªØa th√¨ s·ªõm t√¨m ƒë∆∞·ª£c n·ª≠a kia.
    Happy Woman Day!`,
    `Ch√∫c c√°c b·∫°n n·ªØ h√£y lu√¥n l√† nh·ªØng ƒëo√° hoa xinh t∆∞∆°i c·ªßa VNG n√≥i chung v√† ZaloPay n√≥i ri√™ng nh√© ü•∞‚ú®‚òÄÔ∏èüåª`,
    `M√πng 8 - 3 kh√¥ng ch√∫c c√°c ch·ªã em c√°i g√¨, ch·ªâ mong c√°c ch·ªã em lu√¥n ƒë·ªôc l·∫≠p - t·ª± do - h·∫°nh ph√∫c. ƒê·ªôc l·∫≠p th√¨ ƒë∆∞·ªùng ho√†ng, kh√¥ng ph·∫£i d·ª±a d·∫´m v√†o ai th√¨ c√≥ t·ª± do, m√† c√≥ t·ª± do, l√† c√≥ h·∫°nh ph√∫c.`,
    `Ch√∫c ch·ªã em lu√¥n xinh ƒë·∫πp, t√¨nh ƒë·∫ßy tim, ti·ªÅn ƒë·∫ßy t√∫i`,
    `Ch√∫c c√°c ch·ªã em ph·ª• n·ªØ ZaloPay c√≥ m·ªôt ng√†y 8/3 th·∫≠t √Ω nghƒ©a v√† h·∫°nh ph√∫c b√™n gia ƒë√¨nh v√† b·∫°n b√® c·ªßa m√¨nh nh√©.`,
    `G·ª≠i l·ªùi ch√∫c ri√™ng ƒë·∫øn c√°c ch·ªã em b·∫°n b√® ZaloPay m√£i t∆∞∆°i tr·∫ª v√† nhi·ªát huy·∫øt <3`,
    `Ch√∫c c√°c b·∫°n n·ªØ ZaloPay m·ªôt ng√†y 8/3 vui v·∫ª, lu√¥n vui t∆∞∆°i, xinh ƒë·∫πp v√† y√™u ƒë·ªùi nh∆∞ m·ªçi ng√†y. M·∫∑c k·ªá nh·ªØng l·ªùi ƒë√†m ti·∫øu xung quanh, v√¨ em ƒë·∫πp nh·∫•t khi l√† ch√≠nh em.`,
];

const LETTER_WIDTH = 60;
const LETTER_HEIGHT = 40;

const MAX_VY = 3;
const MIN_VY = 1.5;
const MAX_VX = 1;
const MIN_VX = -1;
const TIME_STEP = 800;
const RENDER_EACH_TIME = 1;
const MARGIN = 100;
const NUMBER_OF_VIDEO_LETTER = 5;
const LETTER_IMAGE = '';
const VIDEO_ELEM = `
    <iframe
        width="560"
        height="315"
        src="https://www.youtube-nocookie.com/embed/dQw4w9WgXcQ?si=0JaMNcjJGxnZWW2U"
        title="YouTube video player"
        frameborder="0"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
        allowfullscreen
    ></iframe>
`;

const dialogElem = document.getElementById('dialog');
const dialogInner = document.getElementById('dialog-inner');
const dialogInnerMessage = document.querySelector('#dialog-inner .message');
const dialogInnerVideo = document.querySelector('#dialog-inner .video');

function moveFirstToEnd(array) {
    if (array.length > 0) {
        const firstElement = array.shift();
        array.push(firstElement);
    }
}

function getRandomRange(min, max) {
    return Math.random() * (max - min) + min;
}

function Letter(type = 'message', message, screenWidth, onClick) {
    this.type = type;
    this.message = message;
    this.vx = getRandomRange(MIN_VX, MAX_VX);
    this.vy = getRandomRange(MIN_VY, MAX_VY);
    this.x = getRandomRange(MARGIN, screenWidth - MARGIN);
    this.y = -30;
    this.elem = (() => {
        const element = document.createElement('div');
        element.className = 'letter';
        if (type === 'video') {
            element.classList.add('video');
        }
        if (getRandomRange(-1, 1) > 0) {
            element.classList.add('rotate1');
        } else {
            element.classList.add('rotate2');
        }
        element.style.width = LETTER_WIDTH + 'px';
        element.style.height = LETTER_HEIGHT + 'px';
        element.style.left = this.x - LETTER_WIDTH / 2 + 'px';
        element.style.top = this.y + 'px';
        element.addEventListener('click', (e) => {
            dialogElem.classList.add('show');
            onClick();
        });
        return element;
    })();
}

window.onload = () => {
    console.log(window.innerHeight, window.innerWidth);
    const screenWidth = window.innerWidth;
    const screenHeight = window.innerHeight;
    const screenElem = document.getElementById('screen-2');
    const MESSAGES = [];
    const letterList = [];
    let letterQueue = [];
    for (let i = 1; i <= 100; i++) {
        MESSAGES.push(i);
    }
    for (let i = 0; i < NUMBER_OF_VIDEO_LETTER + MESSAGES.length; i++) {
        if (i % Math.round(MESSAGES.length / NUMBER_OF_VIDEO_LETTER) === 0) {
            letterQueue.push(
                new Letter('video', '', screenWidth, () => {
                    dialogInner.classList.add('video');
                    dialogInnerMessage.innerText = '';
                    dialogInnerVideo.innerHTML = VIDEO_ELEM;
                })
            );
        } else {
            letterQueue.push(
                new Letter('message', '', screenWidth, () => {
                    dialogInnerMessage.innerText = messageQueue[0];
                    moveFirstToEnd(messageQueue);
                    dialogInner.classList.remove('video');
                    dialogInnerVideo.innerHTML = '';
                })
            );
        }
    }

    dialogInner.addEventListener('click', (e) => {
        e.stopPropagation();
    });

    dialogElem.addEventListener('click', (e) => {
        e.target.classList.remove('show');
    });

    let previousTimeStamp;
    let timeCount = 0;

    function run(timeStamp) {
        if (previousTimeStamp === undefined) {
            previousTimeStamp = timeStamp;
        }
        const deltaTime = timeStamp - previousTimeStamp;
        timeCount += deltaTime;

        const willRemoveElemIndexs = [];
        for (let i = 0; i < letterList.length; i++) {
            letterList[i].x += letterList[i].vx;
            letterList[i].y += letterList[i].vy;

            letterList[i].elem.style.left =
                letterList[i].x - LETTER_WIDTH / 2 + 'px';
            letterList[i].elem.style.top = letterList[i].y + 'px';

            if (letterList[i].y > screenHeight) {
                willRemoveElemIndexs.push(i);
            }
        }

        for (let i = willRemoveElemIndexs.length - 1; i >= 0; i--) {
            screenElem.removeChild(letterList[willRemoveElemIndexs[i]].elem);
            letterList[willRemoveElemIndexs[i]].x = getRandomRange(
                MARGIN,
                screenWidth - MARGIN
            );
            letterList[willRemoveElemIndexs[i]].y = -30;
            letterList.splice(willRemoveElemIndexs[i], 1);
        }

        if (timeCount > TIME_STEP) {
            for (i = 0; i < RENDER_EACH_TIME; i++) {
                const letter = letterQueue[0];
                letterList.push(letter);
                screenElem.appendChild(letter.elem);
                moveFirstToEnd(letterQueue);
            }

            timeCount = 0;
        }
        previousTimeStamp = timeStamp;

        window.requestAnimationFrame(run);
    }
    window.requestAnimationFrame(run);
};
